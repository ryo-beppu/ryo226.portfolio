{"version":3,"sources":["images/Cloudy.svg","images/Rain.svg","images/Sun.svg","images/Thunder.svg","images/Error.svg","redux/action.ts","redux/reducer.ts","components/WeatherProps.tsx","components/Weather.tsx","index.tsx"],"names":["module","exports","ActionTypes","ActionCreators","type","GET_WEATHER_REQUEST","data","GET_WEATHER_SUCCESS","payload","error","GET_WEATHER_FAILURE","initalState","isFetching","reducer","state","action","Clouds","svg","useRef","useEffect","Vivus","current","file","cloudy","duration","id","Rain","rain","Sun","sun","Thunderstorm","thunderstorm","Error","ChangeWeather","dispatch","useDispatch","weatherApiResult","useSelector","useState","apiData","setApiData","a","axios","get","res","weather","main","Weather","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.73d9a44a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Cloudy.840d90fe.svg\";","module.exports = __webpack_public_path__ + \"static/media/Rain.307a81bc.svg\";","module.exports = __webpack_public_path__ + \"static/media/Sun.e6245550.svg\";","module.exports = __webpack_public_path__ + \"static/media/Thunder.77beebdd.svg\";","module.exports = __webpack_public_path__ + \"static/media/Error.c7f623a4.svg\";","import axios from \"axios\";\nimport { Action, Dispatch, ActionCreatorsMapObject } from \"redux\";\nimport { WeatherProp } from \"../components/Common/CommonInterface\";\n\nexport enum ActionTypes {\n  GET_WEATHER_REQUEST = \"GET_WEATHER_REQUEST\",\n  GET_WEATHER_SUCCESS = \"GET_WEATHER_SUCCESS\",\n  GET_WEATHER_FAILURE = \"GET_WEATHER_FAILURE\",\n}\n\nexport type ActionsType = Action<ActionTypes>;\n\nexport const ActionCreators: ActionCreatorsMapObject<ActionsType> = {\n  getWeatherDataRequest() {\n    return {\n      type: ActionTypes.GET_WEATHER_REQUEST,\n    };\n  },\n  getWeatherDataSuccess(data: WeatherProp[]) {\n    return {\n      type: ActionTypes.GET_WEATHER_SUCCESS,\n      payload: data,\n    };\n  },\n  getWeatherDataFailure(error: string) {\n    return {\n      type: ActionTypes.GET_WEATHER_FAILURE,\n      error,\n    };\n  },\n};\n\nexport const getWeatherData = () => {\n  return async (dispatch: Dispatch): Promise<Action> => {\n    dispatch(ActionCreators.getWeatherDataRequest());\n    try {\n      const res = await axios.get<WeatherProp[]>(\n        \"https://api.openweathermap.org/data/2.5/weather?q=Yokohama,jp&units=metric&appid=bf2836e4b535547b1e7b8f0c3844db4f\"\n      );\n      return dispatch(ActionCreators.getWeatherDataSuccess(res.data));\n    } catch (err) {\n      return dispatch(ActionCreators.getWeatherDataFailure(err));\n    }\n  };\n};\n","import { Reducer } from \"redux\";\nimport { ActionTypes } from \"./action\";\nimport { WeatherProp } from \"../components/Common/CommonInterface\";\n\ninterface State {\n  isFetching: boolean;\n  payload: WeatherProp[];\n}\n\nconst initalState: State = {\n  isFetching: false,\n  payload: [],\n};\n\nconst reducer: Reducer<State> = (state: State = initalState, action) => {\n  switch (action.type) {\n    case ActionTypes.GET_WEATHER_REQUEST:\n      return {\n        ...state,\n        isFetching: true,\n        payload: [],\n      };\n    case ActionTypes.GET_WEATHER_SUCCESS:\n      return {\n        ...state,\n        isFetching: false,\n        payload: action.payload,\n      };\n    case ActionTypes.GET_WEATHER_FAILURE:\n      return {\n        ...state,\n        isFetching: false,\n        error: action.payload,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React, { useEffect, useRef } from \"react\";\nimport Vivus from \"vivus\";\nimport cloudy from \"../images/Cloudy.svg\";\nimport rain from \"../images/Rain.svg\";\nimport sun from \"../images/Sun.svg\";\nimport thunderstorm from \"../images/Thunder.svg\";\nimport error from \"../images/Error.svg\";\nimport \"../sass/weatherProps.scss\";\n\nexport function Clouds() {\n  const svg = useRef(\"clouds\");\n  useEffect(() => {\n    const vivusClouds = new Vivus(svg.current, {\n      file: cloudy,\n      type: \"scenario-sync\",\n      duration: 30,\n    });\n  }, [svg.current]);\n\n  return (\n    <div id=\"weather\">\n      <div id=\"clouds\" />\n    </div>\n  );\n}\n\nexport function Rain() {\n  const svg = useRef(\"rain\");\n  useEffect(() => {\n    const vivusRain = new Vivus(svg.current, {\n      file: rain,\n      type: \"scenario-sync\",\n      duration: 30,\n    });\n  }, [svg.current]);\n\n  return (\n    <div id=\"weather\">\n      <div id=\"rain\" />\n    </div>\n  );\n}\n\nexport function Sun() {\n  const svg = useRef(\"sun\");\n  useEffect(() => {\n    const vivusSun = new Vivus(svg.current, {\n      file: sun,\n      type: \"scenario-sync\",\n      duration: 30,\n    });\n  }, [svg.current]);\n\n  return (\n    <div id=\"weather\">\n      <div id=\"sun\" />\n    </div>\n  );\n}\n\nexport function Thunderstorm() {\n  const svg = useRef(\"thunderstorm\");\n  useEffect(() => {\n    const vivusThunderstorm = new Vivus(svg.current, {\n      file: thunderstorm,\n      type: \"scenario-sync\",\n      duration: 30,\n    });\n  }, [svg.current]);\n\n  return (\n    <div id=\"weather\">\n      <div id=\"thunderstorm\" />\n    </div>\n  );\n}\n\nexport function Error() {\n  const svg = useRef(\"error\");\n  useEffect(() => {\n    // eslint-disable-next-line no-new\n    const vivusError = new Vivus(svg.current, {\n      file: error,\n      type: \"scenario-sync\",\n      duration: 15,\n    });\n  }, [svg.current]);\n\n  return (\n    <div id=\"weather\">\n      <div id=\"error\" />\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { WeatherProps, WeatherProp } from \"./Common/CommonInterface\";\nimport { getWeatherData } from \"../redux/action\";\nimport { Sun, Rain, Clouds, Thunderstorm, Error } from \"./WeatherProps\";\n\nfunction ChangeWeather() {\n  const dispatch = useDispatch();\n  const weatherApiResult = useSelector<WeatherProps, WeatherProp>(\n    (state) => state.payload\n  );\n  const [apiData, setApiData] = useState<WeatherProp[\"weather\"]>();\n\n  useEffect(() => {\n    dispatch(getWeatherData());\n  }, [dispatch]);\n\n  useEffect(() => {\n    setApiData(weatherApiResult.weather);\n  }, [apiData, weatherApiResult]);\n\n  switch (apiData?.[0].main) {\n    case \"Thunderstorm\":\n      return <Thunderstorm />;\n    case \"Drizzle\":\n      return <div id=\"drizzle\">drizzle</div>;\n    case \"Rain\":\n      return <Rain />;\n    case \"Snow\":\n      return <div id=\"snow\">snow</div>;\n    case \"Atmosphere\":\n      return <div id=\"atmosphere\">atmosphere</div>;\n    case \"Clear\":\n      return <Sun />;\n    case \"Clouds\":\n      return <Clouds />;\n    default:\n      return <Error />;\n  }\n}\n\nconst Weather: React.FC = () => {\n  return <ChangeWeather />;\n};\n\nexport default Weather;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport thunk from \"redux-thunk\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport reducer from \"./redux/reducer\";\nimport Opening from \"./components/Opening\";\nimport Weather from \"./components/Weather\";\nimport \"./sass/index.scss\";\n\ninterface ExtendedWindow extends Window {\n  __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n}\ndeclare let window: ExtendedWindow;\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(reducer, composeEnhancers(applyMiddleware(thunk)));\n\nReactDOM.render(\n  <Provider store={store}>\n    {/* <Opening /> */}\n    <Weather />\n  </Provider>,\n  document.getElementById(\"app\")\n);\n"],"sourceRoot":""}