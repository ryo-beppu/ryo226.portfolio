{"version":3,"sources":["images/OpeningAnim.svg","images/Cloudy.svg","images/Rain.svg","images/Sun.svg","images/Thunder.svg","images/Error.svg","redux/action.ts","redux/reducer.ts","components/Opening.tsx","components/WeatherProps.tsx","components/Weather.tsx","components/Root.tsx","index.tsx"],"names":["module","exports","ActionTypes","ActionCreators","type","GET_WEATHER_REQUEST","data","GET_WEATHER_SUCCESS","payload","error","GET_WEATHER_FAILURE","CHANGE_STATE","chapter","initalState","isFetching","reducer","state","action","Opening","svg","useRef","dispatch","useDispatch","css","document","styleSheets","item","useEffect","a","axios","get","res","Vivus","current","file","OpeningSVG","insertRule","id","onAnimationEnd","Clouds","cloudy","start","duration","Rain","rain","Sun","sun","Thunderstorm","thunderstorm","Error","ChangeWeather","weatherApiResult","useSelector","useState","apiData","setApiData","weather","main","undefined","Weather","ChangeComponent","Root","composeEnhancers","createLogger","diff","collapsed","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","thunk","store","createStore","applyMiddleware","App","exact","path","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.c0348c98.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/OpeningAnim.3dad17a8.svg\";","module.exports = __webpack_public_path__ + \"static/media/Cloudy.840d90fe.svg\";","module.exports = __webpack_public_path__ + \"static/media/Rain.307a81bc.svg\";","module.exports = __webpack_public_path__ + \"static/media/Sun.e6245550.svg\";","module.exports = __webpack_public_path__ + \"static/media/Thunder.77beebdd.svg\";","module.exports = __webpack_public_path__ + \"static/media/Error.c7f623a4.svg\";","import axios from \"axios\";\nimport { Action, Dispatch, ActionCreatorsMapObject } from \"redux\";\nimport { WeatherProp } from \"../components/Common/CommonInterface\";\n\nexport enum ActionTypes {\n  GET_WEATHER_REQUEST = \"GET_WEATHER_REQUEST\",\n  GET_WEATHER_SUCCESS = \"GET_WEATHER_SUCCESS\",\n  GET_WEATHER_FAILURE = \"GET_WEATHER_FAILURE\",\n  CHANGE_STATE = \"CHANGE_STATE\",\n}\n\nexport type ActionsType = Action<ActionTypes>;\n\nexport const ActionCreators: ActionCreatorsMapObject<ActionsType> = {\n  getWeatherDataRequest() {\n    return {\n      type: ActionTypes.GET_WEATHER_REQUEST,\n    };\n  },\n  getWeatherDataSuccess(data: WeatherProp[]) {\n    return {\n      type: ActionTypes.GET_WEATHER_SUCCESS,\n      payload: data,\n    };\n  },\n  getWeatherDataFailure(error: string) {\n    return {\n      type: ActionTypes.GET_WEATHER_FAILURE,\n      error,\n    };\n  },\n  changeState(data: string) {\n    return {\n      type: ActionTypes.CHANGE_STATE,\n      chapter: data,\n    };\n  },\n};\n\nexport const getWeatherData = () => {\n  return async (dispatch: Dispatch): Promise<Action> => {\n    dispatch(ActionCreators.getWeatherDataRequest());\n    try {\n      const res = await axios.get<WeatherProp[]>(\n        \"https://api.openweathermap.org/data/2.5/weather?q=Yokohama,jp&units=metric&appid=bf2836e4b535547b1e7b8f0c3844db4f\"\n      );\n      return dispatch(ActionCreators.getWeatherDataSuccess(res.data));\n    } catch (err) {\n      return dispatch(ActionCreators.getWeatherDataFailure(err));\n    }\n  };\n};\n","import { Reducer } from \"redux\";\nimport { ActionTypes } from \"./action\";\nimport { WeatherProp } from \"../components/Common/CommonInterface\";\n\ninterface State {\n  isFetching: boolean;\n  payload: WeatherProp[];\n  chapter: string;\n}\n\nconst initalState: State = {\n  isFetching: false,\n  payload: [],\n  chapter: \"Opening\",\n};\n\nconst reducer: Reducer<State> = (state: State = initalState, action) => {\n  switch (action.type) {\n    case ActionTypes.GET_WEATHER_REQUEST:\n      return {\n        ...state,\n        isFetching: true,\n        payload: [],\n      };\n    case ActionTypes.GET_WEATHER_SUCCESS:\n      return {\n        ...state,\n        isFetching: false,\n        payload: action.payload,\n      };\n    case ActionTypes.GET_WEATHER_FAILURE:\n      return {\n        ...state,\n        isFetching: false,\n        error: action.payload,\n      };\n    case ActionTypes.CHANGE_STATE:\n      return {\n        ...state,\n        chapter: action.chapter,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React, { useEffect, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Vivus from \"vivus\";\nimport { ActionCreators, getWeatherData } from \"../redux/action\";\nimport OpeningSVG from \"../images/OpeningAnim.svg\";\nimport \"../sass/opening.scss\";\n\nconst Opening: React.FC = () => {\n  const svg = useRef(\"loadAnim\");\n  const dispatch = useDispatch();\n  const css = document.styleSheets.item(0)!;\n  useEffect(() => {\n    dispatch(getWeatherData());\n  }, [dispatch]);\n\n  useEffect(() => {\n    const vivusOpening = new Vivus(\n      svg.current,\n      {\n        file: OpeningSVG,\n        type: \"scenario-sync\",\n      },\n      () => {\n        css.insertRule(\".cls-1{animation: strokeAnimation ease-in-out 1s;}\", 0);\n      }\n    );\n  }, [svg.current]);\n\n  return (\n    <div id=\"load\">\n      <div\n        id=\"loadAnim\"\n        onAnimationEnd={() => dispatch(ActionCreators.changeState(\"Weather\"))}\n      />\n    </div>\n  );\n};\n\nexport default Opening;\n","import React, { useEffect, useRef } from \"react\";\nimport Vivus from \"vivus\";\nimport cloudy from \"../images/Cloudy.svg\";\nimport rain from \"../images/Rain.svg\";\nimport sun from \"../images/Sun.svg\";\nimport thunderstorm from \"../images/Thunder.svg\";\nimport error from \"../images/Error.svg\";\nimport \"../sass/weatherProps.scss\";\n\nexport function Clouds() {\n  const svg = useRef(\"clouds\");\n  useEffect(() => {\n    const vivusClouds = new Vivus(svg.current, {\n      file: cloudy,\n      type: \"scenario-sync\",\n      start: \"autostart\",\n      duration: 30,\n    });\n  }, [svg.current]);\n\n  return (\n    <div id=\"weather\">\n      <div id=\"clouds\" />\n    </div>\n  );\n}\n\nexport function Rain() {\n  const svg = useRef(\"rain\");\n  useEffect(() => {\n    const vivusRain = new Vivus(svg.current, {\n      file: rain,\n      type: \"scenario-sync\",\n      start: \"autostart\",\n      duration: 30,\n    });\n  }, [svg.current]);\n\n  return (\n    <div id=\"weather\">\n      <div id=\"rain\" />\n    </div>\n  );\n}\n\nexport function Sun() {\n  const svg = useRef(\"sun\");\n  useEffect(() => {\n    const vivusSun = new Vivus(svg.current, {\n      file: sun,\n      type: \"scenario-sync\",\n      start: \"autostart\",\n      duration: 30,\n    });\n  }, [svg.current]);\n\n  return (\n    <div id=\"weather\">\n      <div id=\"sun\" />\n    </div>\n  );\n}\n\nexport function Thunderstorm() {\n  const svg = useRef(\"thunderstorm\");\n  useEffect(() => {\n    const vivusThunderstorm = new Vivus(svg.current, {\n      file: thunderstorm,\n      type: \"scenario-sync\",\n      start: \"autostart\",\n      duration: 30,\n    });\n  }, [svg.current]);\n\n  return (\n    <div id=\"weather\">\n      <div id=\"thunderstorm\" />\n    </div>\n  );\n}\n\nexport function Error() {\n  const svg = useRef(\"error\");\n  useEffect(() => {\n    const vivusError = new Vivus(svg.current, {\n      file: error,\n      type: \"scenario-sync\",\n      start: \"autostart\",\n      duration: 15,\n    });\n  }, [svg.current]);\n\n  return (\n    <div id=\"weather\">\n      <div id=\"error\" />\n    </div>\n  );\n}\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { WeatherProps, WeatherProp } from \"./Common/CommonInterface\";\n\nimport { Sun, Rain, Clouds, Thunderstorm, Error } from \"./WeatherProps\";\n\nfunction ChangeWeather() {\n  const weatherApiResult = useSelector<WeatherProps, WeatherProp>(\n    (state) => state.payload\n  );\n  const [apiData, setApiData] = useState<WeatherProp[\"weather\"]>();\n\n  useEffect(() => {\n    setApiData(weatherApiResult.weather);\n  }, [apiData, weatherApiResult]);\n\n  switch (apiData?.[0].main) {\n    case \"Thunderstorm\":\n      return <Thunderstorm />;\n    case \"Drizzle\":\n      return <div id=\"drizzle\">drizzle</div>;\n    case \"Rain\":\n      return <Rain />;\n    case \"Snow\":\n      return <div id=\"snow\">snow</div>;\n    case \"Atmosphere\":\n      return <div id=\"atmosphere\">atmosphere</div>;\n    case \"Clear\":\n      return <Sun />;\n    case \"Clouds\":\n      return <Clouds />;\n    case undefined:\n      return <Error />;\n    default:\n      return <div />;\n  }\n}\n\nconst Weather: React.FC = () => {\n  return <ChangeWeather />;\n};\n\nexport default Weather;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { WeatherProps } from \"./Common/CommonInterface\";\nimport Opening from \"./Opening\";\nimport Weather from \"./Weather\";\n\nfunction ChangeComponent() {\n  const stateResult = useSelector<WeatherProps, string>(\n    (state) => state.chapter\n  );\n\n  switch (stateResult) {\n    case \"Weather\":\n      return <Weather />;\n    default:\n      return <Opening />;\n  }\n}\n\nconst Root: React.FC = () => {\n  return <ChangeComponent />;\n};\n\nexport default Root;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport thunk from \"redux-thunk\";\nimport { createLogger } from \"redux-logger\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport reducer from \"./redux/reducer\";\nimport Root from \"./components/Root\";\nimport \"./sass/index.scss\";\n\ninterface ExtendedWindow extends Window {\n  __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n}\ndeclare let window: ExtendedWindow;\n\nconst logger = createLogger({\n  diff: true,\n  collapsed: true,\n});\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nlet middleware = [];\nif (process.env.NODE_ENV === \"development\") {\n  middleware = [thunk, logger];\n} else {\n  middleware = [thunk];\n}\n\nconst store = createStore(\n  reducer,\n  composeEnhancers(applyMiddleware(...middleware))\n);\n\nfunction App() {\n  return (\n    <Router>\n      <Route exact path=\"/ryo226.portfolio\" component={Root} />\n    </Router>\n  );\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"app\")\n);\n"],"sourceRoot":""}