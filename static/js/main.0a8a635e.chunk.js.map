{"version":3,"sources":["images/Item.svg","images/OpeningAnim.svg","images/Cloudy.svg","images/Rain.svg","images/Sun.svg","images/Thunder.svg","images/Error.svg","images/Center.svg","redux/action.ts","redux/reducer.ts","components/Loading/Loading.tsx","components/Weather/Weather.tsx","components/status/Status.tsx","components/Root.tsx","index.tsx"],"names":["module","exports","ActionTypes","ActionCreators","type","GET_WEATHER_REQUEST","data","GET_WEATHER_SUCCESS","payload","error","GET_WEATHER_FAILURE","CHANGE_STATE","chapter","initalState","isFetching","reducer","state","action","Opening","svg","useRef","dispatch","useDispatch","css","document","styleSheets","item","useEffect","a","axios","get","res","Vivus","current","file","OpeningSVG","insertRule","id","onAnimationEnd","ChangeWeather","useSelector","weather","main","option","thunderstorm","start","duration","callback","element","querySelector","addEventListener","rain","animTimingFunction","EASE","sun","cloudy","undefined","Weather","Status","weatherApiResult","useState","sunriseData","setSunriseData","sunsetData","setSunsetData","sys","sunrise","sunset","sunriseTime","Date","sunsetTime","toLocaleTimeString","Grid","container","justify","center","visibility","temp","wind","speed","deg","clouds","all","ChangeComponent","Loading","Root","composeEnhancers","createLogger","diff","collapsed","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","middleware","thunk","store","createStore","applyMiddleware","App","exact","path","component","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.0a8a635e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Item.7e99472c.svg\";","module.exports = __webpack_public_path__ + \"static/media/OpeningAnim.3dad17a8.svg\";","module.exports = __webpack_public_path__ + \"static/media/Cloudy.840d90fe.svg\";","module.exports = __webpack_public_path__ + \"static/media/Rain.307a81bc.svg\";","module.exports = __webpack_public_path__ + \"static/media/Sun.e6245550.svg\";","module.exports = __webpack_public_path__ + \"static/media/Thunder.77beebdd.svg\";","module.exports = __webpack_public_path__ + \"static/media/Error.c7f623a4.svg\";","module.exports = __webpack_public_path__ + \"static/media/Center.01d08c1f.svg\";","import axios from \"axios\";\nimport { Action, Dispatch, ActionCreatorsMapObject } from \"redux\";\nimport { WeatherProp } from \"../components/Common/CommonInterface\";\n\nexport enum ActionTypes {\n  GET_WEATHER_REQUEST = \"GET_WEATHER_REQUEST\",\n  GET_WEATHER_SUCCESS = \"GET_WEATHER_SUCCESS\",\n  GET_WEATHER_FAILURE = \"GET_WEATHER_FAILURE\",\n  CHANGE_STATE = \"CHANGE_STATE\",\n}\n\nexport type ActionsType = Action<ActionTypes>;\n\nexport const ActionCreators: ActionCreatorsMapObject<ActionsType> = {\n  getWeatherDataRequest() {\n    return {\n      type: ActionTypes.GET_WEATHER_REQUEST,\n    };\n  },\n  getWeatherDataSuccess(data: WeatherProp[]) {\n    return {\n      type: ActionTypes.GET_WEATHER_SUCCESS,\n      payload: data,\n    };\n  },\n  getWeatherDataFailure(error: string) {\n    return {\n      type: ActionTypes.GET_WEATHER_FAILURE,\n      error,\n    };\n  },\n  changeState(data: string) {\n    return {\n      type: ActionTypes.CHANGE_STATE,\n      chapter: data,\n    };\n  },\n};\n\nexport const getWeatherData = () => {\n  return async (dispatch: Dispatch): Promise<Action> => {\n    dispatch(ActionCreators.getWeatherDataRequest());\n    try {\n      const res = await axios.get<WeatherProp[]>(\n        \"https://api.openweathermap.org/data/2.5/weather?q=Yokohama,jp&units=metric&appid=bf2836e4b535547b1e7b8f0c3844db4f\"\n      );\n      return dispatch(ActionCreators.getWeatherDataSuccess(res.data));\n    } catch (err) {\n      return dispatch(ActionCreators.getWeatherDataFailure(err));\n    }\n  };\n};\n","import { Reducer } from \"redux\";\nimport { ActionTypes } from \"./action\";\nimport { WeatherProp } from \"../components/Common/CommonInterface\";\n\ninterface State {\n  isFetching: boolean;\n  payload: WeatherProp[];\n  chapter: string;\n}\n\nconst initalState: State = {\n  isFetching: false,\n  payload: [],\n  chapter: \"Opening\",\n};\n\nconst reducer: Reducer<State> = (state: State = initalState, action) => {\n  switch (action.type) {\n    case ActionTypes.GET_WEATHER_REQUEST:\n      return {\n        ...state,\n        isFetching: true,\n        payload: [],\n      };\n    case ActionTypes.GET_WEATHER_SUCCESS:\n      return {\n        ...state,\n        isFetching: false,\n        payload: action.payload,\n      };\n    case ActionTypes.GET_WEATHER_FAILURE:\n      return {\n        ...state,\n        isFetching: false,\n        error: action.payload,\n      };\n    case ActionTypes.CHANGE_STATE:\n      return {\n        ...state,\n        chapter: action.chapter,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import React, { useEffect, useRef } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport Vivus from \"vivus\";\nimport { ActionCreators, getWeatherData } from \"../../redux/action\";\nimport OpeningSVG from \"../../images/OpeningAnim.svg\";\nimport \"../../sass/opening.scss\";\n\nconst Opening: React.FC = () => {\n  const svg = useRef(\"loadAnim\");\n  const dispatch = useDispatch();\n  const css = document.styleSheets.item(0)!;\n  useEffect(() => {\n    dispatch(getWeatherData());\n  }, [dispatch]);\n\n  useEffect(() => {\n    const vivusOpening = new Vivus(\n      svg.current,\n      {\n        file: OpeningSVG,\n        type: \"scenario-sync\",\n      },\n      () => {\n        css.insertRule(\".cls-1{animation: strokeAnimation ease-in-out 1s;}\", 0);\n      }\n    );\n  }, [svg.current]);\n\n  return (\n    <div id=\"load\">\n      <div\n        id=\"loadAnim\"\n        onAnimationEnd={() => dispatch(ActionCreators.changeState(\"Weather\"))}\n      />\n    </div>\n  );\n};\n\nexport default Opening;\n","import React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport Vivus from \"vivus\";\nimport ReactVivus from \"react-vivus\";\nimport { WeatherProps, WeatherProp } from \"../Common/CommonInterface\";\nimport { ActionCreators } from \"../../redux/action\";\nimport cloudy from \"../../images/Cloudy.svg\";\nimport rain from \"../../images/Rain.svg\";\nimport sun from \"../../images/Sun.svg\";\nimport thunderstorm from \"../../images/Thunder.svg\";\nimport error from \"../../images/Error.svg\";\nimport \"../../sass/weather.scss\";\n\nfunction ChangeWeather() {\n  const dispatch = useDispatch();\n  const css = document.styleSheets.item(0)!;\n  const weatherApiResult = useSelector<WeatherProps, WeatherProp>(\n    (state) => state.payload\n  );\n\n  switch (weatherApiResult.weather[0].main) {\n    case \"Thunderstorm\":\n      return (\n        <ReactVivus\n          id=\"Thunder\"\n          option={{\n            file: thunderstorm,\n            type: \"oneByOne\",\n            start: \"autostart\",\n            duration: 250,\n          }}\n          callback={() => {\n            css.insertRule(\n              \"#Tunder{animation: strokeAnimation ease-in-out 1s;}\"\n            );\n            const element = document.querySelector(\"#Thunder\");\n            if (element != null) {\n              element.addEventListener(\"animationend\", () => {\n                dispatch(ActionCreators.changeState(\"Status\"));\n              });\n            }\n          }}\n        />\n      );\n    case \"Drizzle\":\n      return <div id=\"drizzle\">drizzle</div>;\n    case \"Rain\":\n      return (\n        <ReactVivus\n          id=\"Rain\"\n          option={{\n            file: rain,\n            type: \"oneByOne\",\n            start: \"autostart\",\n            duration: 150,\n            animTimingFunction: Vivus.EASE,\n          }}\n          callback={() => {\n            css.insertRule(\"#Rain{animation: strokeAnimation ease-in-out 1s;}\");\n            const element = document.querySelector(\"#Rain\");\n            if (element != null) {\n              element.addEventListener(\"animationend\", () => {\n                dispatch(ActionCreators.changeState(\"Status\"));\n              });\n            }\n          }}\n        />\n      );\n    case \"Snow\":\n      return <div id=\"snow\">snow</div>;\n    case \"Atmosphere\":\n      return <div id=\"atmosphere\">atmosphere</div>;\n    case \"Clear\":\n      return (\n        <ReactVivus\n          id=\"Sun\"\n          option={{ file: sun, type: \"sync\", start: \"autostart\", duration: 30 }}\n          callback={() => {\n            css.insertRule(\n              \"#Clear{animation: strokeAnimation ease-in-out 1s;}\"\n            );\n            const element = document.querySelector(\"#Sun\");\n            if (element != null) {\n              element.addEventListener(\"animationend\", () => {\n                dispatch(ActionCreators.changeState(\"Status\"));\n              });\n            }\n          }}\n        />\n      );\n    case \"Clouds\":\n      return (\n        <ReactVivus\n          id=\"Cloudy\"\n          option={{\n            file: cloudy,\n            type: \"sync\",\n            start: \"autostart\",\n            duration: 100,\n            animTimingFunction: Vivus.EASE,\n          }}\n          callback={() => {\n            css.insertRule(\n              \"#Cloudy{animation: strokeAnimation ease-in-out 1s;}\"\n            );\n            const element = document.querySelector(\"#Cloudy\");\n            if (element != null) {\n              element.addEventListener(\"animationend\", () => {\n                dispatch(ActionCreators.changeState(\"Status\"));\n              });\n            }\n          }}\n        />\n      );\n    case undefined:\n      return (\n        <ReactVivus\n          id=\"Error\"\n          option={{\n            file: error,\n            type: \"sync\",\n            start: \"autostart\",\n            animTimingFunction: Vivus.EASE,\n          }}\n        />\n      );\n    default:\n      return <div />;\n  }\n}\n\nconst Weather: React.FC = () => {\n  return (\n    <div id=\"weather\">\n      <ChangeWeather />\n    </div>\n  );\n};\n\nexport default Weather;\n","import React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport Vivus from \"vivus\";\nimport ReactVivus from \"react-vivus\";\nimport { Grid } from \"@material-ui/core\";\nimport { WeatherProps, WeatherProp } from \"../Common/CommonInterface\";\nimport item from \"../../images/Item.svg\";\nimport center from \"../../images/Center.svg\";\nimport \"../../sass/status.scss\";\n\nconst Status: React.FC = () => {\n  const weatherApiResult = useSelector<WeatherProps, WeatherProp>(\n    (state) => state.payload\n  );\n  const [sunriseData, setSunriseData] = useState(\"\");\n  const [sunsetData, setSunsetData] = useState(\"\");\n\n  useEffect(() => {\n    if (\n      typeof weatherApiResult.sys?.sunrise !== \"undefined\" &&\n      typeof weatherApiResult.sys?.sunset !== \"undefined\"\n    ) {\n      const sunriseTime = new Date(weatherApiResult.sys?.sunrise * 1000);\n      const sunsetTime = new Date(weatherApiResult.sys?.sunset * 1000);\n      setSunriseData(sunriseTime.toLocaleTimeString());\n      setSunsetData(sunsetTime.toLocaleTimeString());\n    }\n  }, []);\n\n  return (\n    <>\n      <Grid container justify=\"center\">\n        <Grid item>\n          <ReactVivus\n            id=\"center\"\n            option={{\n              file: center,\n              type: \"delayed\",\n              start: \"autostart\",\n              duration: 100,\n              animTimingFunction: Vivus.EASE,\n            }}\n          />\n        </Grid>\n      </Grid>\n      <Grid container justify=\"space-around\">\n        <Grid item>\n          <ReactVivus id=\"item1\" option={{ file: item }} />\n          <p>CPG : OK</p>\n          <p>NEURAL LINGUAGE : OK</p>\n          <p>ION CONCENTRATION : OK</p>\n          <p>META MOTOR AREA PARAMETERS : OK</p>\n          <p>REACTOR : OK</p>\n          <p>POWER FLOW : OK</p>\n          <ReactVivus id=\"item2\" option={{ file: item }} />\n        </Grid>\n        <Grid item>\n          <ReactVivus id=\"item3\" option={{ file: item }} />\n          <p>{`VISIBLITY : ${weatherApiResult.visibility}`}</p>\n          <p>{`WEATHER : ${weatherApiResult.weather[0].main}`}</p>\n          <p>{`AMBIENT TEMPERATURE : ${weatherApiResult.main.temp}`}</p>\n          <p>{`WIND SPEED : ${weatherApiResult.wind.speed}`}</p>\n          <p>{`WIND DEG : ${weatherApiResult.wind.deg}`}</p>\n          <p>{`CLOUDS ALL : ${weatherApiResult.clouds.all}`}</p>\n          <p>{`SUNRISE : ${sunriseData}`}</p>\n          <p>{`SUNSET : ${sunsetData}`}</p>\n          <ReactVivus id=\"item4\" option={{ file: item }} />\n        </Grid>\n      </Grid>\n    </>\n  );\n};\n\nexport default Status;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { WeatherProps } from \"./Common/CommonInterface\";\nimport Loading from \"./Loading/Loading\";\nimport Weather from \"./Weather/Weather\";\nimport Status from \"./status/Status\";\n\nfunction ChangeComponent() {\n  const stateResult = useSelector<WeatherProps, string>(\n    (state) => state.chapter\n  );\n\n  switch (stateResult) {\n    case \"Status\":\n      return <Status />;\n    case \"Weather\":\n      return <Weather />;\n    default:\n      return <Loading />;\n  }\n}\n\nconst Root: React.FC = () => {\n  return <ChangeComponent />;\n};\n\nexport default Root;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport thunk from \"redux-thunk\";\nimport { createLogger } from \"redux-logger\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport reducer from \"./redux/reducer\";\nimport Root from \"./components/Root\";\nimport \"./sass/index.scss\";\n\ninterface ExtendedWindow extends Window {\n  __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\n}\ndeclare let window: ExtendedWindow;\n\nconst logger = createLogger({\n  diff: true,\n  collapsed: true,\n});\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nlet middleware = [];\nif (process.env.NODE_ENV === \"development\") {\n  middleware = [thunk, logger];\n} else {\n  middleware = [thunk];\n}\n\nconst store = createStore(\n  reducer,\n  composeEnhancers(applyMiddleware(...middleware))\n);\n\nfunction App() {\n  return (\n    <Router>\n      <Route exact path=\"/ryo226.portfolio\" component={Root} />\n    </Router>\n  );\n}\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"app\")\n);\n"],"sourceRoot":""}